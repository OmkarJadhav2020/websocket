# Define common configurations
config("compiler_defaults") {
  cflags = [
    "-Wall",
    "-Wextra",
    "-std=c++17",
  ]
}

config("debug_config") {
  cflags = [
    "-g",
    "-O0",
    "-DDEBUG",
  ]
}

config("release_config") {
  cflags = [
    "-O2",
    "-DNDEBUG",
  ]
}

# Define a source set for the WebSocket client code
source_set("websocket_client_lib") {
  sources = [
    "src/websocket_client.cc",
    "src/cli_handler.cc",
  ]
  
  public = [
    "src/websocket_client.h",
    "src/cli_handler.h",
  ]
  
  include_dirs = [
    "//",
    "//third_party",
  ]
  
  libs = [
    "websockets",
    "ssl",
    "crypto",
    "z",
    "pthread",
  ]
  
  configs = [ ":compiler_defaults" ]
  
  if (is_debug) {
    configs += [ ":debug_config" ]
  } else {
    configs += [ ":release_config" ]
  }
}

# Define the main executable
executable("websocket_client") {
  sources = [
    "src/main.cc",
    
  ]
  
  include_dirs = [
    "//",
    "//third_party",
  ]
  
  deps = [
    ":websocket_client_lib",
  ]
  
  configs = [ ":compiler_defaults" ]
  
  if (is_debug) {
    configs += [ ":debug_config" ]
  } else {
    configs += [ ":release_config" ]
  }
}

# Define the test executable
executable("websocket_client_test") {
  sources = [
    "tests/websocket_client_test.cc",
  ]
  
  include_dirs = [
    "//",
    "//third_party",
  ]
  
  deps = [
    ":websocket_client_lib",
  ]
  
  configs = [ ":compiler_defaults" ]
  
  if (is_debug) {
    configs += [ ":debug_config" ]
  } else {
    configs += [ ":release_config" ]
  }
}
